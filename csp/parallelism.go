package main

// 并行: parallelism
// 并发: concurrency

/*
* 并行: 让不同的代码片段同时在不同的物理处理器上执行，并行的关键是同时做很多
* 事情，而并发是指同时管理很多事情，这些事情可能只做了一半就被暂停去做别的事情
* 了。
* 很多情况中，并发的效果比并行好，因为操作系统和硬件的总资源一般很少，虽然
* 支持同时做很多事情，但原则上应该少用系统资源，这种"使用较少的资源做更多的
* 的事情" 的哲学，也指导了go语言的设计。
*
* 要使 goroutine 并行，则需使用多于一个逻辑处理器, 当有多个逻辑处理器时,
* 调度器会将 goroutine  平等分配到每个逻辑处理器上，这会让 goroutine
* 在不同的线程上运行。 调度器的算法会随着go语言的发布被更新和改进，所以不
* 推荐盲目修改语言运行时候对逻辑处理器的默认设置。
*
 */
